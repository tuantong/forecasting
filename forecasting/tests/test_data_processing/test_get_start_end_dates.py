# Generated by CodiumAI
import pandas as pd

from forecasting.data.preprocessing.process_dataset import get_start_end_dates


class TestGetStartEndDates:

    # Returns a tuple containing three datetime objects
    def test_returns_tuple_with_three_datetime_objects(self):
        # Arrange
        order_df = pd.DataFrame(
            {
                "date": [
                    pd.to_datetime("2022-01-01"),
                    pd.to_datetime("2022-01-02"),
                    pd.to_datetime("2022-01-03"),
                ]
            }
        )
        inference_set = False
        stop_date = "last_sunday"

        # Act
        result = get_start_end_dates(order_df, inference_set, stop_date)

        # Assert
        assert isinstance(result, tuple)
        assert len(result) == 3
        assert isinstance(result[0], pd.Timestamp)
        assert isinstance(result[1], pd.Timestamp)
        assert isinstance(result[2], pd.Timestamp)

    # Handles stop_date parameter as 'last_sunday'
    def test_handles_stop_date_last_sunday(self):
        # Arrange
        order_df = pd.DataFrame(
            {
                "date": [
                    pd.to_datetime("2022-01-01"),
                    pd.to_datetime("2022-01-02"),
                    pd.to_datetime("2022-01-03"),
                ]
            }
        )
        inference_set = False
        stop_date = "last_sunday"

        # Act
        result = get_start_end_dates(order_df, inference_set, stop_date)

        # Assert
        assert result[2].day_name() == "Sunday"
